@page "/indices/"

@inject AppState App
@inject CronusClient Cronus
@inject IJSRuntime JSRuntime

<h2>Indices</h2>


<MudTable Elevation="3" Items="@IndexCollection?.Indices" PageLabel="dfjgh" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" AllowSelection="true" SelectionChanged="SelectionChangedEvent">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Status</MudTh>
        <MudTh>Action Options</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.IndexName</MudTd>
            <MudTd>@context.Status</MudTd>
            <MudTd>
                <MudTooltip Text="Amount of parallel tasks running simultaneously.">
                    <MudNumericField @bind-Value="@context.MaxDegreeOfParallelism" Label="Max DoP" Step="1" Clearable=true FullWidth=true></MudNumericField>
                </MudTooltip>
            </MudTd>
            <MudTd>
                <MudButton Label="Rebuild" Variant="Variant.Outlined" Color="Color.Success" OnClick="@(async () => await RebuildIndex(context))">Rebuild</MudButton>
                <MudButton Label="Finalize" Variant="Variant.Outlined" Color="Color.Success" OnClick="@(async () => await FinalizeIndex(context.IndexContractId))">Finalize</MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>

    @*<p>
    <MatButton Label="Menu" OnClick="@OnClick2" @ref="asd"></MatButton>
    <MatMenu @ref="qwe">
    <MatList>
    <MatListItem>Item 1</MatListItem>
    <MatListItem>Item 2</MatListItem>
    <MatListItem>Item 3</MatListItem>
    <MatListItem>Item 4</MatListItem>
    <MatListItem>Item 5</MatListItem>
    </MatList>
    </MatMenu>
    </p>*@

    @*<div class="mat-layout-grid-inner">
    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
    <h3 class="mat-h3">@Aggregate?.Name Commands</h3>
    <MatTable Items="@Aggregate?.Commands" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" AllowSelection="true" class="mat-elevation-z5">
    <MatTableHeader>
    <th>Name</th>
    <th>ID</th>
    </MatTableHeader>
    <MatTableRow>
    <td>@context.Name</td>
    <td><i>@context.Id</i></td>
    </MatTableRow>
    </MatTable>
    </div>
    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
    <h3 class="mat-h3">@Aggregate?.Name Events</h3>
    <MatTable Items="@Aggregate?.Events" LoadInitialData="true" FilterByColumnName="Name" PageSize="9999" ShowPaging="false" Striped="false" AllowSelection="true" class="mat-elevation-z5">
    <MatTableHeader>
    <th>Name</th>
    <th>ID</th>
    </MatTableHeader>
    <MatTableRow>
    <td>@context.Name</td>
    <td><i>@context.Id</i></td>
    </MatTableRow>
    </MatTable>
    </div>
    </div>*@

    @code {

    IndexCollection IndexCollection { get; set; }

    [Parameter]
    public string Name { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IndexCollection = (await Cronus.GetIndicesAsync(@App.Connection)).Result;
    }

    public void SelectionChangedEvent(object row)
    {
        //if (row != null)
        //{
        //    Aggregate = (DomainAggregateDto)row;
        //}

        this.StateHasChanged();
    }

    protected async Task FinalizeIndex(string indexId)
    {
        await Cronus.FinalizeIndexRebuildAsync(@App.Connection, indexId);
    }

    protected async Task RebuildIndex(Models.Index index)
    {
        await Cronus.RebuildIndexAsync(@App.Connection, index.IndexContractId, index.MaxDegreeOfParallelism);
    }
}
